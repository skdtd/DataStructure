package arithmetic.labyrinth;

/**
 * @author skdtd
 * @date 2019/11/11 12:42
 */
public class Labyrinth {
    int[][] map = {
            { 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9 },
            { 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9 }
    };

    /**
     * 0: 未探测
     * 2: 可行
     * 4: 不可行
     * 9: 不可通行
     *
     * @param map 地图
     * @param x,y 起点
     * @return 是否达到终点
     */
    public boolean recall(int[][] map, int x, int y) {
        if (map[14][14] == 2) {
            // 到达指定地点
            return true;
        } else {
            // 开始寻路
            if (map[x][y] == 0) {
                map[x][y] = 2;
                if (recall(map, x + 1, y)) {
                    return true;
                } else if (recall(map, x, y + 1)) {
                    return true;
                } else if (recall(map, x - 1, y)) {
                    return true;
                } else if (recall(map, x, y - 1)) {
                    return true;
                } else {
                    map[x][y] = 4;
                    return false;
                }
            } else {
                return false;
            }
        }
    }
}


